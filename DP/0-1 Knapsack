#0-1 knapsack DP

# n=number of objects
# m=maximum weight 
# w=list of weights of objects
# p=list of values of objects

def knapsack(n,m,w,p):
    dp=[[0 for j in range(m+1)]for i in range(n+1)]
    for i in range(1,n+1):
        for j in range(1,m+1):
            if w[i]>j:
                dp[i][j]=dp[i-1][j]
            else:
                dp[i][j]=max(dp[i-1][j],dp[i-1][j-w[i]]+p[i])
    
    max_profit=dp[n][m]
    
    r_ptr,c_ptr=n,m
    objects=set()
    
    while m!=0:
        if dp[r_ptr-1][c_ptr]==dp[r_ptr][c_ptr]:
            r_ptr=r_ptr-1
        else:
            m=m-w[r_ptr]
            c_ptr=m
            objects.add(r_ptr)
            
    print(objects)
