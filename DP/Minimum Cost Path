#Minimum Cost Path DP

def print_path(b,dp,m,i,j):
    path=[m[i-1][j-1]]
    i-=1
    j-=1
    while i!=0 and j!=0:
        if b[i][j]=='|':
            i-=1
        else:
            j-=1
        path.insert(0, m[i][j])
    path.insert(0,m[0][0])
    print(path)

def mcp(m,row,col):
    dp=[[0 for j in range(col)]for i in range(row)]
    b=[['|' for j in range(col)]for i in range(row)]
    dp[0][0]=m[0][0]
    
    for j in range(1,col):
        dp[0][j]=m[0][j]+dp[0][j-1]
        b[0][j]='<-'
    for i in range(1,row):
        dp[i][0]=m[i][0]+dp[i-1][0]
        b[i][0]='|'
        
    for i in range(1,row):
        for j in range(1,col):
            if dp[i-1][j]<=dp[i][j-1]:
                dp[i][j]=m[i][j]+dp[i-1][j]
                b[i][j] = '|'
            else:
                dp[i][j]=m[i][j]+dp[i][j-1]
                b[i][j] = '<-'
