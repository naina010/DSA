#Minimum Edit Distance DP

def print_operations(x,y,dp,b):
    i,j=len(x),len(y)
    while i>0 and j>0:
        if b[i][j]=='diagnol' and x[i-1]!=y[j-1]:
            print('Replace',y[j-1],'of string y with',x[i-1])
            i-=1
            j-=1
        elif  b[i][j]=='diagnol' and x[i-1]==y[j-1]:
            i-=1
            j-=1
        elif b[i][j]=='left':
            print('Delete',y[j-1],'in string y')
            j-=1
        elif b[i][j]=='up':
            print('Add',x[i-1],'in string y')
            i-=1

def med(x,y):
    n,m=len(x),len(y)
    dp=[[0 for j in range(m+1)]for i in range(n+1)]
    
    for i in range(n+1):
        dp[i][0]=i
    for j in range(m+1):
        dp[0][j]=j
    b=[['up' for j in range(m+1)]for i in range(n+1)]
    
    for i in range(1,n+1):
        for j in range(1,m+1):
            if y[j-1]==x[i-1] or ():
                b[i][j]='diagnol'
                dp[i][j]=dp[i-1][j-1]
            else:
                if dp[i-1][j]>=dp[i-1][j-1]<=dp[i][j-1]:
                    b[i][j]='diagnol'
                    dp[i][j]=dp[i-1][j-1]+1
                elif dp[i-1][j]>=dp[i][j-1]<=dp[i-1][j-1]:
                    b[i][j]='left'
                    dp[i][j]=dp[i][j-1]+1
                else:
                    b[i][j]='up'
                    dp[i][j]=dp[i-1][j]+1
                   
    print('Minimum edit distance:',dp[-1][-1])
    print_operations(x,y,dp,b)
    
    
    
